- hosts: localhost
  become: true
  become_user: root
  tasks:
    - include_vars: settings.yml
    - name: remove exim4
      apt: name=exim4 state=absent
    - include: includes/firewall.yml
    - name: install postfix and plugins
      apt: name={{ item }} state=present
      with_items:
        - postfix
        - postfix-mysql
    - name: install dovecot and plugins
      apt: name={{ item }} state=present
      with_items:
        - dovecot-sieve
        - dovecot-mysql
        - dovecot-imapd
        - dovecot-lmtpd
        - dovecot-managesieved
    - name: install spamassassin
      apt: name=spamassassin state=present
    - name: making sure remote certs directory exists
      file: dest={{ item | dirname }} state=directory recurse=yes
      with_items:
        - "{{ ssl.key.remote }}"
        - "{{ ssl.cert.remote }}"
    - block:
      - include: includes/lets-encrypt.yml
      - name: Check certificate date
        stat: path=/etc/letsencrypt/live/{{ hostname }}/fullchain.pem
        register: mtime
      - name: get certificate from letsencrypt
        shell: executable=/bin/bash cd /opt/certbot && ./certbot-auto certonly --email {{ ssl.email }} --domains {{ hostname }} --agree-tos --renew-by-default --standalone --expand
        when: ansible_date_time.epoch|float - mtime.stat.mtime > 60*60*24*30
        notify:
          - reload postfix
          - reload dovecot
      - name: linking letsencrypt certificate
        file: src=/etc/letsencrypt/live/{{ hostname }}/{{ item.src }} dest={{ item.dest }} state=link
        with_items:
          - { src: 'fullchain.pem', dest: "{{ ssl.cert.remote }}" }
          - { src: 'privkey.pem', dest: "{{ ssl.key.remote }}" }
        notify:
          - reload postfix
          - reload dovecot
      when: ssl.use_letsencrypt
    - name: Copying key and cert to remote
      copy: src={{ item.src }} dest={{ item.dest }}
      with_items:
        - { src: "{{ ssl.cert.local }}", dest: "{{ ssl.cert.remote }}" }
        - { src: "{{ ssl.key.local }}", dest: "{{ ssl.key.remote }}" }
      when: not ssl.use_letsencrypt
    - name: update postfix configs
      template: src=templates/postfix/{{ item.src }} dest=/etc/postfix/{{ item.dest }}
      with_items:
        - { src: 'main.cf.j2', dest: 'main.cf' }
        - { src: 'master.cf.j2', dest: 'master.cf' }
        - { src: 'mysql-virtual-alias-maps.cf.j2', dest: 'mysql-virtual-alias-maps.cf' }
        - { src: 'mysql-virtual-mailbox-maps.cf.j2', dest: 'mysql-virtual-mailbox-maps.cf' }
        - { src: 'mysql-virtual-mailbox-domains.cf.j2', dest: 'mysql-virtual-mailbox-domains.cf' }
      notify:
        - restart postfix
    - name: remove unmanaged postfix files
      file: path=/etc/postfix/{{ item }} state=absent
      with_items:
        - postfix-script
        - post-install
        - dynamicmaps.cf
      notify:
        - reload postfix
    - name: update dovecot configs
      template: src=templates/dovecot/{{ item.src }} dest=/etc/dovecot/{{ item.dest }}
      with_items:
        - { src: 'dovecot.conf.j2', dest: 'dovecot.conf' }
        - { src: 'dovecot-sql.conf.ext.j2', dest: 'dovecot-sql.conf.ext' }
        - { src: 'conf.d/10-auth.conf.j2', dest: 'conf.d/10-auth.conf' }
        - { src: 'conf.d/10-mail.conf.j2', dest: 'conf.d/10-mail.conf' }
        - { src: 'conf.d/10-master.conf.j2', dest: 'conf.d/10-master.conf' }
        - { src: 'conf.d/10-ssl.conf.j2', dest: 'conf.d/10-ssl.conf' }
        - { src: 'conf.d/15-mailboxes.conf.j2', dest: 'conf.d/15-mailboxes.conf' }
        - { src: 'conf.d/auth-sql.conf.ext.j2', dest: 'conf.d/auth-sql.conf.ext' }
      notify:
        - reload dovecot
    - name: remove unmanaged dovecot files
      file: path=/etc/dovecot/{{ item }} state=absent
      with_items:
        - dovecot-dict-sql.conf.ext
        - dovecot-dict-auth.conf.ext
        - private
        - README
      notify:
        - reload dovecot
    - name: update spamassasin configs
      template: src=templates/spamassassin/local.cf dest=/etc/spamassassin/local.cf
      notify:
        - reload spamassassin
    - name: remove unmanaged spamassassin files
      file: path=/etc/spamassassin/65_debian.cf state=absent
      notify:
        - reload spamassassin
    - name: update cluegetter configs
      template: src=templates/cluegetter/cluegetter.conf.j2 dest=/etc/cluegetter/cluegetter.conf
      notify:
        - reload cluegetter
    - name: creating user vmail
      user: name=vmail home=/var/empty createhome=no
    - name: creating mail dir
      file: dest={{ mail_dir }} state=directory owner=vmail group=vmail
    - name: starting services
      service: name={{ item }} state=started
      with_items:
        - dovecot
        - spamassassin
        - postfix

  handlers:
    - name: reload postfix
      service: name="postfix" state=reloaded
    - name: reload dovecot
      service: name="dovecot" state=reloaded
    - name: reload spamassassin
      service: name="spamassassin" state=reloaded
    - name: reload cluegetter
      service: name="spamassassin" state=reloaded